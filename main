const int fotoresistenciaPin1 = A0;
const int fotoresistenciaPin2 = A1;
const int ledPin1 = 13;
const int ledPin2 = 12;

const float distancia = 0.3;
bool objetoDetectado = false;
unsigned long tiempoInicio = 0;
unsigned long tiempoDeteccion = 0;

void setup() {
  pinMode(ledPin1, OUTPUT);
  pinMode(ledPin2, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  int valorFoto1 = analogRead(fotoresistenciaPin1);
  int valorFoto2 = analogRead(fotoresistenciaPin2);

  // Puedes ajustar estos umbrales según tus necesidades
  int umbral1 = 30;
  int umbral2 = 150;
  
  // Variables para cinemática
  float velocidad = 0.0;
  float aceleracion = 0.0;

  digitalWrite(ledPin1, LOW);
  digitalWrite(ledPin2, LOW);

  // Detección del bloqueo de la luz en la primera fotoresistencia
  if (valorFoto1 < umbral1 && !objetoDetectado) {
    tiempoInicio = millis(); // Guardar el tiempo actual
    objetoDetectado = true;
  }

  // Detección del desbloqueo en la segunda fotoresistencia
  if (valorFoto2 < umbral2 && objetoDetectado) { 
    tiempoDeteccion = millis() - tiempoInicio; // Calcular el tiempo que pasó
    objetoDetectado = false;

    // Calcular velocidad y aceleración
    velocidad = distancia / (tiempoDeteccion / 1000.0); // m/s
    aceleracion = velocidad / (tiempoDeteccion / 1000.0); // m/s^2

    // Imprimir resultados en el monitor serie
    Serial.print("Tiempo de detección: ");
    Serial.print(tiempoDeteccion);
    Serial.print(" ms, Velocidad: ");
    Serial.print(velocidad);
    Serial.print(" m/s, Aceleración: ");
    Serial.print(aceleracion);
    Serial.println(" m/s^2");

}
